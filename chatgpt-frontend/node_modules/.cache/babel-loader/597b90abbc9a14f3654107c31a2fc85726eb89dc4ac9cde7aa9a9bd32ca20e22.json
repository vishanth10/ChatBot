{"ast":null,"code":"import Chatbot from'./Chatbot';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\" Chatbot\"}),/*#__PURE__*/_jsx(Chatbot,{})]});}export default App;// import logo from './logo.svg';\n// import './App.css';\n// import React, { useState } from 'react';\n// function App() {\n//   const [companyResponse, setCompanyResponse] = useState('');\n//   const [gptResponse, setGptResponse] = useState('');\n//   const [query, setQuery] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const getCompanyResponse = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     const response = await fetch('http://localhost:8000/getApi', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ \"query\": query })\n//     });\n//     const data = await response.json();\n//     setCompanyResponse(data);\n//     setLoading(false);\n//   }\n//   const getGptResponse = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     const response = await fetch('http://localhost:8000/getResponse', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ \"query\": query })\n//     });\n//     const data = await response.json();\n//     setGptResponse(data);\n//     setLoading(false);\n//   }\n//   return (\n//     <div>\n//       <form>\n//         <label>Enter your query:</label><br></br>\n//         <input type=\"text\" value={query} onChange={(e) => setQuery(e.target.value)} /><br></br>\n//         <button type=\"submit\" onClick={getCompanyResponse} >Get Company Response</button><br></br>\n//         <button type=\"submit\" onClick={getGptResponse} >Get GPT Response</button><br></br>\n//       </form>\n//       {loading ? <p>Loading...</p> : <p>{JSON.stringify(companyResponse)}</p>}\n//       {loading ? <p>Loading...</p> : <p>{JSON.stringify(gptResponse)}</p>}\n//     </div>\n//   );\n// }\n// export default App;","map":{"version":3,"names":["Chatbot","jsx","_jsx","jsxs","_jsxs","App","className","children"],"sources":["/Users/vhr/Chatgpt_replica/chatgpt-frontend/src/App.js"],"sourcesContent":["import Chatbot from './Chatbot';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2> Chatbot</h2>\n      \n      <Chatbot />\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n// import logo from './logo.svg';\n// import './App.css';\n// import React, { useState } from 'react';\n\n// function App() {\n\n//   const [companyResponse, setCompanyResponse] = useState('');\n//   const [gptResponse, setGptResponse] = useState('');\n//   const [query, setQuery] = useState('');\n//   const [loading, setLoading] = useState(false);\n\n//   const getCompanyResponse = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     const response = await fetch('http://localhost:8000/getApi', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ \"query\": query })\n//     });\n//     const data = await response.json();\n//     setCompanyResponse(data);\n//     setLoading(false);\n//   }\n\n//   const getGptResponse = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     const response = await fetch('http://localhost:8000/getResponse', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ \"query\": query })\n//     });\n//     const data = await response.json();\n//     setGptResponse(data);\n//     setLoading(false);\n//   }\n\n//   return (\n//     <div>\n//       <form>\n//         <label>Enter your query:</label><br></br>\n//         <input type=\"text\" value={query} onChange={(e) => setQuery(e.target.value)} /><br></br>\n//         <button type=\"submit\" onClick={getCompanyResponse} >Get Company Response</button><br></br>\n//         <button type=\"submit\" onClick={getGptResponse} >Get GPT Response</button><br></br>\n//       </form>\n//       {loading ? <p>Loading...</p> : <p>{JSON.stringify(companyResponse)}</p>}\n//       {loading ? <p>Loading...</p> : <p>{JSON.stringify(gptResponse)}</p>}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n"],"mappings":"AAAA,MAAO,CAAAA,OAAO,KAAM,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,mBACED,KAAA,QAAKE,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBL,IAAA,OAAAK,QAAA,CAAI,UAAQ,CAAI,CAAC,cAEjBL,IAAA,CAACF,OAAO,GAAE,CAAC,EACR,CAAC,CAEV,CAEA,cAAe,CAAAK,GAAG,CAMlB;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}