{"ast":null,"code":"var _jsxFileName = \"/Users/vhr/Chatgpt_replica/chatgpt-frontend/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [searchEnabled, setSearchEnabled] = useState(false);\n  const handleToggle = () => {\n    setSearchEnabled(!searchEnabled);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const userMessage = {\n      sender: 'user',\n      text: query\n    };\n    setMessages([...messages, userMessage]);\n    if (searchEnabled) {\n      const companyResponse = await fetch('http://localhost:8000/getApi', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query\n        })\n      }).then(res => res.json());\n      const botMessage = {\n        sender: 'bot',\n        company: formatCompanyResponse(companyResponse),\n        openAi: null\n      };\n      setMessages([...messages, userMessage, botMessage]);\n    } else {\n      const response = await fetch('http://localhost:8000/getResponseStream', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      let openAiResponse = '';\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        openAiResponse += decoder.decode(value, {\n          stream: true\n        });\n        const botMessage = {\n          sender: 'bot',\n          company: null,\n          openAi: openAiResponse\n        };\n        setMessages(prevMessages => [...prevMessages.slice(0, -1), botMessage]);\n      }\n    }\n    setQuery('');\n    setLoading(false);\n  };\n  const formatCompanyResponse = response => {\n    if (response.data && response.data.response_text) {\n      const text = response.data.response_text.replace(/\\n/g, '<br/>');\n      const urls = response.data.web_url.map(url => `<a href=\"${url}\" target=\"_blank\">${url}</a>`).join('<br/>');\n      return `${text}<br/><br/>Sources:<br/>${urls}`;\n    }\n    return JSON.stringify(response);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.sender === 'bot' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content bot-message\",\n          dangerouslySetInnerHTML: {\n            __html: `<p><strong>Company Response:</strong><br/>${msg.company}</p><p><strong>OpenAI Response:</strong><br/>${msg.openAi}</p>`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content user-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"User:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), \" \", msg.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), !loading && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Made by Vishanth hearsymbol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"toggle-switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: searchEnabled,\n          onChange: handleToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"u1oWdhUQ/DZQ+g131gnhQ8wvQh4=\");\n_c = Chatbot;\nexport default Chatbot;\n//     );\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","query","setQuery","loading","setLoading","searchEnabled","setSearchEnabled","handleToggle","handleSubmit","e","preventDefault","userMessage","sender","text","companyResponse","fetch","method","headers","body","JSON","stringify","then","res","json","botMessage","company","formatCompanyResponse","openAi","response","reader","getReader","decoder","TextDecoder","openAiResponse","done","value","read","decode","stream","prevMessages","slice","data","response_text","replace","urls","web_url","map","url","join","className","children","msg","index","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","placeholder","checked","_c","$RefreshReg$"],"sources":["/Users/vhr/Chatgpt_replica/chatgpt-frontend/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Chatbot.css';\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [searchEnabled, setSearchEnabled] = useState(false);\n\n  const handleToggle = () => {\n    setSearchEnabled(!searchEnabled);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const userMessage = { sender: 'user', text: query };\n    setMessages([...messages, userMessage]);\n\n    if (searchEnabled) {\n      const companyResponse = await fetch('http://localhost:8000/getApi', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ query })\n      }).then(res => res.json());\n\n      const botMessage = {\n        sender: 'bot',\n        company: formatCompanyResponse(companyResponse),\n        openAi: null\n      };\n\n      setMessages([...messages, userMessage, botMessage]);\n    } else {\n      const response = await fetch('http://localhost:8000/getResponseStream', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ query })\n      });\n\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      let openAiResponse = '';\n      \n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n        openAiResponse += decoder.decode(value, { stream: true });\n\n        const botMessage = {\n          sender: 'bot',\n          company: null,\n          openAi: openAiResponse\n        };\n        setMessages((prevMessages) => [...prevMessages.slice(0, -1), botMessage]);\n      }\n    }\n\n    setQuery('');\n    setLoading(false);\n  };\n\n  const formatCompanyResponse = (response) => {\n    if (response.data && response.data.response_text) {\n      const text = response.data.response_text.replace(/\\n/g, '<br/>');\n      const urls = response.data.web_url.map(url => `<a href=\"${url}\" target=\"_blank\">${url}</a>`).join('<br/>');\n      return `${text}<br/><br/>Sources:<br/>${urls}`;\n    }\n    return JSON.stringify(response);\n  };\n\n  return (\n    <div className=\"chatbot\">\n      <div className=\"chat-window\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`message ${msg.sender}`}>\n            {msg.sender === 'bot' ? (\n              <div className=\"message-content bot-message\" dangerouslySetInnerHTML={{ __html: `<p><strong>Company Response:</strong><br/>${msg.company}</p><p><strong>OpenAI Response:</strong><br/>${msg.openAi}</p>` }} />\n            ) : (\n              <div className=\"message-content user-message\">\n                <strong>User:</strong> {msg.text}\n              </div>\n            )}\n          </div>\n        ))}\n        {loading && <p className=\"loading\">Loading...</p>}\n      </div>\n      {!loading && (\n        <form onSubmit={handleSubmit} className=\"chat-input\">\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"Type your message...\"\n          />\n          <button type=\"submit\">Send</button>\n        </form>\n      )}\n      <footer className=\"footer\">\n        <p>Made by Vishanth hearsymbol</p>\n        <label className=\"toggle-switch\">\n          <input type=\"checkbox\" checked={searchEnabled} onChange={handleToggle} />\n          <span className=\"slider\"></span>\n        </label>\n      </footer>\n    </div>\n  );\n};\n\nexport default Chatbot;\n//     );"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACzBD,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMO,WAAW,GAAG;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEZ;IAAM,CAAC;IACnDD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEY,WAAW,CAAC,CAAC;IAEvC,IAAIN,aAAa,EAAE;MACjB,MAAMS,eAAe,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEnB;QAAM,CAAC;MAChC,CAAC,CAAC,CAACoB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;MAE1B,MAAMC,UAAU,GAAG;QACjBZ,MAAM,EAAE,KAAK;QACba,OAAO,EAAEC,qBAAqB,CAACZ,eAAe,CAAC;QAC/Ca,MAAM,EAAE;MACV,CAAC;MAED3B,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEY,WAAW,EAAEa,UAAU,CAAC,CAAC;IACrD,CAAC,MAAM;MACL,MAAMI,QAAQ,GAAG,MAAMb,KAAK,CAAC,yCAAyC,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEnB;QAAM,CAAC;MAChC,CAAC,CAAC;MAEF,MAAM4B,MAAM,GAAGD,QAAQ,CAACV,IAAI,CAACY,SAAS,CAAC,CAAC;MACxC,MAAMC,OAAO,GAAG,IAAIC,WAAW,CAAC,CAAC;MACjC,IAAIC,cAAc,GAAG,EAAE;MAEvB,OAAO,IAAI,EAAE;QACX,MAAM;UAAEC,IAAI;UAAEC;QAAM,CAAC,GAAG,MAAMN,MAAM,CAACO,IAAI,CAAC,CAAC;QAC3C,IAAIF,IAAI,EAAE;QACVD,cAAc,IAAIF,OAAO,CAACM,MAAM,CAACF,KAAK,EAAE;UAAEG,MAAM,EAAE;QAAK,CAAC,CAAC;QAEzD,MAAMd,UAAU,GAAG;UACjBZ,MAAM,EAAE,KAAK;UACba,OAAO,EAAE,IAAI;UACbE,MAAM,EAAEM;QACV,CAAC;QACDjC,WAAW,CAAEuC,YAAY,IAAK,CAAC,GAAGA,YAAY,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAEhB,UAAU,CAAC,CAAC;MAC3E;IACF;IAEAtB,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMsB,qBAAqB,GAAIE,QAAQ,IAAK;IAC1C,IAAIA,QAAQ,CAACa,IAAI,IAAIb,QAAQ,CAACa,IAAI,CAACC,aAAa,EAAE;MAChD,MAAM7B,IAAI,GAAGe,QAAQ,CAACa,IAAI,CAACC,aAAa,CAACC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC;MAChE,MAAMC,IAAI,GAAGhB,QAAQ,CAACa,IAAI,CAACI,OAAO,CAACC,GAAG,CAACC,GAAG,IAAK,YAAWA,GAAI,qBAAoBA,GAAI,MAAK,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC;MAC1G,OAAQ,GAAEnC,IAAK,0BAAyB+B,IAAK,EAAC;IAChD;IACA,OAAOzB,IAAI,CAACC,SAAS,CAACQ,QAAQ,CAAC;EACjC,CAAC;EAED,oBACEhC,OAAA;IAAKqD,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBtD,OAAA;MAAKqD,SAAS,EAAC,aAAa;MAAAC,QAAA,GACzBnD,QAAQ,CAAC+C,GAAG,CAAC,CAACK,GAAG,EAAEC,KAAK,kBACvBxD,OAAA;QAAiBqD,SAAS,EAAG,WAAUE,GAAG,CAACvC,MAAO,EAAE;QAAAsC,QAAA,EACjDC,GAAG,CAACvC,MAAM,KAAK,KAAK,gBACnBhB,OAAA;UAAKqD,SAAS,EAAC,6BAA6B;UAACI,uBAAuB,EAAE;YAAEC,MAAM,EAAG,6CAA4CH,GAAG,CAAC1B,OAAQ,gDAA+C0B,GAAG,CAACxB,MAAO;UAAM;QAAE;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAE9M9D,OAAA;UAAKqD,SAAS,EAAC,8BAA8B;UAAAC,QAAA,gBAC3CtD,OAAA;YAAAsD,QAAA,EAAQ;UAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACP,GAAG,CAACtC,IAAI;QAAA;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B;MACN,GAPON,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQV,CACN,CAAC,EACDvD,OAAO,iBAAIP,OAAA;QAAGqD,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,EACL,CAACvD,OAAO,iBACPP,OAAA;MAAM+D,QAAQ,EAAEnD,YAAa;MAACyC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAClDtD,OAAA;QACEgE,IAAI,EAAC,MAAM;QACXzB,KAAK,EAAElC,KAAM;QACb4D,QAAQ,EAAGpD,CAAC,IAAKP,QAAQ,CAACO,CAAC,CAACqD,MAAM,CAAC3B,KAAK,CAAE;QAC1C4B,WAAW,EAAC;MAAsB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACF9D,OAAA;QAAQgE,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CACP,eACD9D,OAAA;MAAQqD,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACxBtD,OAAA;QAAAsD,QAAA,EAAG;MAA2B;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClC9D,OAAA;QAAOqD,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC9BtD,OAAA;UAAOgE,IAAI,EAAC,UAAU;UAACI,OAAO,EAAE3D,aAAc;UAACwD,QAAQ,EAAEtD;QAAa;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzE9D,OAAA;UAAMqD,SAAS,EAAC;QAAQ;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC5D,EAAA,CAzGID,OAAO;AAAAoE,EAAA,GAAPpE,OAAO;AA2Gb,eAAeA,OAAO;AACtB;AAAA,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}