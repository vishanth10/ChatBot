{"ast":null,"code":"var _jsxFileName = \"/Users/vhr/Chatgpt_replica/chatgpt-frontend/src/App.js\";\nimport Chatbot from './Chatbot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chatbot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n\n// import logo from './logo.svg';\n// import './App.css';\n// import React, { useState } from 'react';\n\n// function App() {\n\n//   const [companyResponse, setCompanyResponse] = useState('');\n//   const [gptResponse, setGptResponse] = useState('');\n//   const [query, setQuery] = useState('');\n//   const [loading, setLoading] = useState(false);\n\n//   const getCompanyResponse = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     const response = await fetch('http://localhost:8000/getApi', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ \"query\": query })\n//     });\n//     const data = await response.json();\n//     setCompanyResponse(data);\n//     setLoading(false);\n//   }\n\n//   const getGptResponse = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     const response = await fetch('http://localhost:8000/getResponse', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ \"query\": query })\n//     });\n//     const data = await response.json();\n//     setGptResponse(data);\n//     setLoading(false);\n//   }\n\n//   return (\n//     <div>\n//       <form>\n//         <label>Enter your query:</label><br></br>\n//         <input type=\"text\" value={query} onChange={(e) => setQuery(e.target.value)} /><br></br>\n//         <button type=\"submit\" onClick={getCompanyResponse} >Get Company Response</button><br></br>\n//         <button type=\"submit\" onClick={getGptResponse} >Get GPT Response</button><br></br>\n//       </form>\n//       {loading ? <p>Loading...</p> : <p>{JSON.stringify(companyResponse)}</p>}\n//       {loading ? <p>Loading...</p> : <p>{JSON.stringify(gptResponse)}</p>}\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Chatbot","jsxDEV","_jsxDEV","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vhr/Chatgpt_replica/chatgpt-frontend/src/App.js"],"sourcesContent":["import Chatbot from './Chatbot';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2> Chatbot</h2>\n      \n      <Chatbot />\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n// import logo from './logo.svg';\n// import './App.css';\n// import React, { useState } from 'react';\n\n// function App() {\n\n//   const [companyResponse, setCompanyResponse] = useState('');\n//   const [gptResponse, setGptResponse] = useState('');\n//   const [query, setQuery] = useState('');\n//   const [loading, setLoading] = useState(false);\n\n//   const getCompanyResponse = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     const response = await fetch('http://localhost:8000/getApi', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ \"query\": query })\n//     });\n//     const data = await response.json();\n//     setCompanyResponse(data);\n//     setLoading(false);\n//   }\n\n//   const getGptResponse = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     const response = await fetch('http://localhost:8000/getResponse', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({ \"query\": query })\n//     });\n//     const data = await response.json();\n//     setGptResponse(data);\n//     setLoading(false);\n//   }\n\n//   return (\n//     <div>\n//       <form>\n//         <label>Enter your query:</label><br></br>\n//         <input type=\"text\" value={query} onChange={(e) => setQuery(e.target.value)} /><br></br>\n//         <button type=\"submit\" onClick={getCompanyResponse} >Get Company Response</button><br></br>\n//         <button type=\"submit\" onClick={getGptResponse} >Get GPT Response</button><br></br>\n//       </form>\n//       {loading ? <p>Loading...</p> : <p>{JSON.stringify(companyResponse)}</p>}\n//       {loading ? <p>Loading...</p> : <p>{JSON.stringify(gptResponse)}</p>}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBH,OAAA;MAAAG,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjBP,OAAA,CAACF,OAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACC,EAAA,GARQP,GAAG;AAUZ,eAAeA,GAAG;;AAMlB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}